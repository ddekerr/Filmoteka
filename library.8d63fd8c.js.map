{"mappings":"oeAAAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,S,aAGA,MAAME,EAAUC,SAASC,cAAc,UACjCC,EAAWF,SAASC,cAAc,6BAClCE,EAAaH,SAASC,cAAc,iCAE1CC,EAASE,iBAAiB,SAqE1B,SAAsBC,GACrBC,IAEkCC,EAA3BC,GAAG,cAAcC,IAEiB,MAAhCC,EAAcD,EAAME,KAEpBC,EAAiBC,EAASP,IAAiB,GAAII,GACrDI,QAAQC,IAAIH,GACZ,MAAMI,GAAS,EAAAlB,EAAAmB,oBAAmBL,GAClCb,EAAQmB,UAAYF,KAEtBb,EAAWgB,UAAW,EACtBjB,EAASkB,UAAUC,IAAI,UACvBlB,EAAWiB,UAAUE,OAAO,UAC5BpB,EAASiB,UAAW,KAnFtBhB,EAAWC,iBAAiB,SAiDN,SAAEC,GACtBkB,IAEiChB,EAA3BC,GAAG,cAAcC,IAEiB,MAAhCC,EAAcD,EAAME,KAEpBC,EAAiBC,EAASU,IAAmB,GAAIb,GACvDI,QAAQC,IAAIH,GACZ,MAAMI,GAAS,EAAAlB,EAAAmB,oBAAmBL,GAClCb,EAAQmB,UAAYF,KAEtBd,EAASiB,UAAW,EACpBjB,EAASkB,UAAUE,OAAO,UAC1BnB,EAAWiB,UAAUC,IAAI,UACzBlB,EAAWgB,UAAW,KA/DxBjB,EAASiB,UAAW,EAII,MAAlBZ,GAAQ,EAAAiB,EAAAC,cAGRZ,EAAW,CAACa,EAAOC,EAAUC,IAC1BF,EAAMG,OAAOD,EAAa,GAAKD,EAAUC,EAAaD,GAWxD,SAASJ,IACd,MAAMO,EAAgBC,aAAaC,QAAQ,WACzC,IAAIC,EAAiBC,KAAKC,MAAML,GAElC,MAAMM,EAAQH,EAAeI,OAEvBrB,GAAS,EAAAlB,EAAAmB,oBAAmBJ,EAASoB,EAAgB,GAAI,IAG/D,OAFAlC,EAAQmB,UAAYF,EACpBT,EAAM+B,MAAMF,GACLH,EAIT,SAAS3B,IACP,MAAMiC,EAAcR,aAAaC,QAAQ,SACvC,IAAIQ,EAAeN,KAAKC,MAAMI,GAEhC,MAAMH,EAAQI,EAAaH,OAErBrB,GAAS,EAAAlB,EAAAmB,oBAAmBJ,EAAS2B,EAAc,GAAI,IAG7D,OAFAzC,EAAQmB,UAAYF,EACpBT,EAAM+B,MAAMF,GACLI,EA7BTT,aAAaU,QAAQ,UAAWP,KAAKQ,UAAUC,mBAC/CZ,aAAaU,QAAQ,QAASP,KAAKQ,UAAUE,mB,sBCtB7C,MAAMC,EAAa,CAAC,WACpB,IAAIC,EAEJ,MAaMC,EAAQ,KAEb,IAAK,MAAMC,KAAWF,EAAa,CAElC,MAAMG,EAAUD,EAAQ9B,UAClBgC,EAAU,gBAAiBF,EAAQG,QAAUH,EAAQG,QAAQC,aAPxC1B,EAO0EmB,GAP1DQ,KAAKC,MAAMD,KAAKE,SAAW7B,EAAMW,SAQ5EW,EAAQ9B,UAAY,gFAAgFgC,qCAAyCD,kBARnH,IAACvB,GAcvB8B,EAAW,KAEhB,MAAMC,EAAeC,OAAOC,YACtBC,EAAe5D,SAAS6D,gBAAgBD,WAAa5D,SAAS8D,KAAKF,UACnEG,EAAe/D,SAAS8D,KAAKE,cAAgBJ,EAAYH,EAE/D,IAAK,MAAMT,KAAWF,EAAa,CAElC,GAAIE,EAAQ5B,UAAU6C,SAAS,UAAW,SAE1C,MACMC,EADOlB,EAAQmB,wBACHD,IAAMN,GACpBG,GAAgBG,GAAON,EAAuB,GAAVH,IAAeT,EAAQ5B,UAAUC,IAAI,YAM/ErB,SAASI,iBAAiB,oBA3Cb,KAEZ0C,EAAc9C,SAASoE,iBAAiB,sBAExCrB,IAEAW,OAAOtD,iBAAiB,SAASoD,GAAS,GAC1CE,OAAOW,cAAc,IAAIC,MAAM,cAoCkB","sources":["src/js/library.js","src/js/library-buttons.js","src/js/plug-for-library.js"],"sourcesContent":["import './refs';\nimport config from './config';\nimport modal from './modal';\nimport {getWatchedItems} from './library-buttons';\nimport spinner from './spinner';\nimport { pagination } from './pagination';\nimport './plug-for-library';\n","import { createFilmsGallery } from './markups';\nimport { pagination } from './pagination';\n\nconst gallery = document.querySelector('.films');\nconst queueBtn = document.querySelector('[data-queue=\"data-queue\"]');\nconst watchedBtn = document.querySelector('[data-watched=\"data-watched\"]');\n\nqueueBtn.addEventListener('click', onclickQueue);\nwatchedBtn.addEventListener('click', onClickWatched);\nqueueBtn.disabled = false;\n\n\n// вызываем функцию пагинации\nconst pagin = pagination();\n\n// функция, которая режет массив\nconst paginate = (array, pageSize, pageNumber) => {\n  return array.slice((pageNumber - 1) * pageSize, pageNumber * pageSize);\n};\n\n\nlocalStorage.setItem('watched', JSON.stringify(watchMovieObject));\nlocalStorage.setItem('queue', JSON.stringify(queueMovieObject));\n\n\n\n// функции получения данных из локалстора и рендеринга их\n\nexport function getWatchedItems() {\n  const watchedMovies = localStorage.getItem('watched');\n    let arrayOFWatched = JSON.parse(watchedMovies);\n\n  const total = arrayOFWatched.length;\n  // рендерим первые 20 фильмов\n  const markup = createFilmsGallery(paginate(arrayOFWatched, 20, 1));\n  gallery.innerHTML = markup;\n  pagin.reset(total);\n  return arrayOFWatched;\n}\n\n\nfunction getQueueItems() {\n  const queueMovies = localStorage.getItem('queue');\n    let arrayOFQueue = JSON.parse(queueMovies);\n\n  const total = arrayOFQueue.length;\n  // рендерим первые 20 фильмов\n  const markup = createFilmsGallery(paginate(arrayOFQueue, 20, 1));\n  gallery.innerHTML = markup;\n  pagin.reset(total);\n  return arrayOFQueue;\n}\n\n\n\n// функции нажатия на кнопки \n\nfunction onClickWatched(e) {\n  getWatchedItems();\n  // рендерим пагинацию остальных страниц\n  pagin.on('beforeMove', event => {\n    // получаем номер активной страницы на кнопках\n    const currentPage = event.page;\n    // создаем массив для рендера по 20 айтемов на страницу\n    const arrayForMarkup = paginate(getWatchedItems(), 20, currentPage);\n    console.log(arrayForMarkup);\n    const markup = createFilmsGallery(arrayForMarkup);\n    gallery.innerHTML = markup;\n  });\n  queueBtn.disabled = false;\n  queueBtn.classList.remove('active');\n  watchedBtn.classList.add('active');\n  watchedBtn.disabled = true;\n};\n\n\nfunction onclickQueue(e) {\n getQueueItems();\n  // рендерим пагинацию остальных страниц\n  pagin.on('beforeMove', event => {\n    // получаем номер активной страницы на кнопках\n    const currentPage = event.page;\n    // создаем массив для рендера по 20 айтемов на страницу\n    const arrayForMarkup = paginate(getQueueItems(), 20, currentPage);\n    console.log(arrayForMarkup);\n    const markup = createFilmsGallery(arrayForMarkup);\n    gallery.innerHTML = markup;\n  });\n  watchedBtn.disabled = false;\n  queueBtn.classList.add('active');\n  watchedBtn.classList.remove('active');\n  queueBtn.disabled = true;\n}\n\n\n","const COLOR_LIST = ['#ff6b01'];\nlet $targetList;\n\nconst init = () => {\n\n $targetList = document.querySelectorAll('[data-js=\"reveal\"]');\n\n setup();\n\n window.addEventListener('scroll',onScroll,false);\n window.dispatchEvent(new Event('scroll'));\n\n}\n\nconst getArrayRandomValue = (array) => array[Math.floor(Math.random() * array.length)];\n\nconst setup = () => {\n\n for (const $target of $targetList) {\n\n  const content = $target.innerHTML;\n  const color   = 'revealColor' in $target.dataset ? $target.dataset.revealColor : getArrayRandomValue(COLOR_LIST);\n  $target.innerHTML = `<span data-reveal=\"content\"><div data-reveal=\"cover\" style=\"background-color:${color}\"></div><span data-reveal=\"text\">${content}</span></span>`;\n\n }\n\n}\n\nconst onScroll = () => {\n\n const windowH      = window.innerHeight;\n const scrollTop    = document.documentElement.scrollTop || document.body.scrollTop;\n const isMostScroll = document.body.clientHeight <= scrollTop + windowH;\n\n for (const $target of $targetList) {\n\n  if ($target.classList.contains('loaded')) continue;\n\n  const rect = $target.getBoundingClientRect();\n  const top  = rect.top + scrollTop;\n  if (isMostScroll || top <= scrollTop + (windowH * .8)) $target.classList.add('loaded');\n\n }\n\n}\n\ndocument.addEventListener('DOMContentLoaded',init,false);"],"names":["parcelRequire","$fA0uA","$b9e6b9b2c2f99fcc$var$gallery","document","querySelector","$b9e6b9b2c2f99fcc$var$queueBtn","$b9e6b9b2c2f99fcc$var$watchedBtn","addEventListener","e","$b9e6b9b2c2f99fcc$var$getQueueItems","$b9e6b9b2c2f99fcc$var$pagin","on","event","currentPage","page","arrayForMarkup","$b9e6b9b2c2f99fcc$var$paginate","console","log","markup","createFilmsGallery","innerHTML","disabled","classList","add","remove","$b9e6b9b2c2f99fcc$export$d72a0d389166c6d4","$2nhTy","pagination","array","pageSize","pageNumber","slice","watchedMovies","localStorage","getItem","arrayOFWatched","JSON","parse","total","length","reset","queueMovies","arrayOFQueue","setItem","stringify","watchMovieObject","queueMovieObject","$9625bde4e5259b06$var$COLOR_LIST","$9625bde4e5259b06$var$$targetList","$9625bde4e5259b06$var$setup","$target","content","color","dataset","revealColor","Math","floor","random","$9625bde4e5259b06$var$onScroll","windowH","window","innerHeight","scrollTop","documentElement","body","isMostScroll","clientHeight","contains","top","getBoundingClientRect","querySelectorAll","dispatchEvent","Event"],"version":3,"file":"library.8d63fd8c.js.map"}